apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
        - name: orders
          image: quanological/orders

          # Read an article talking about refraining from putting resource
          # restrictions on CPU, RAM
          # But I want to play with this concept later. Particularly for load testing.
          # I want to simulate creating an AWS container with certain CPU/RAM restrictions
          # resources:
          #   limits:
          #     cpu: 1gb
          #     memory: 256mb
          env:
            # This gets the name that is generated by Kubernetes
            # To see the name generated by Kubernetes, use `kubectl get pods`
            # in shell to see a named terminal. 
            # The name will have the form ${PODNAME}-8657bdc6dc-8z7zt
            # e.g., for nats-depl it would be
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef: 
                  fieldPath:
                    metadata.name
            - name: NATS_URL
              value: 'http://nats-srv:4222'
            - name: NATS_CLUSTER_ID
              value: ticketing
            - name: MONGO_URI
              value: mongodb://orders-mongo-srv:27017/orders
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_KEY
---
apiVersion: v1
kind: Service
metadata:
  name: orders-srv
spec:
  selector:
    app: orders
  ports:
    - name: orders
      protocol: TCP
      port: 3000
      targetPort: 3000
